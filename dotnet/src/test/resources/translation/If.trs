dotnet-compilation:
  steps:
  - target: Pravda.dll
    sources:
    - PravdaDotNet/Pravda.cs
    optimize: false
  - target: If.exe
    sources:
    - Pravda.dll
    - dotnet-tests/resources/If.cs
    optimize: false
---
translation: |-
  meta custom "CIL"
  meta program_name "If"
  dup
  push "ctor"
  eq
  jumpi @method_ctor
  push "init"
  sexist
  jumpi @methods
  push "Program was not initialized"
  throw
  @methods:
  dup
  push "TestIfs"
  eq
  jumpi @method_TestIfs
  push "Wrong method name"
  throw
  @method_TestIfs:
  meta method {
  "name":"TestIfs","returnTpe":int8(0)
  }
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  meta source_mark {
  "sl":int32(7),"sc":int32(4),"el":int32(7),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(5)
  }
  meta source_mark {
  "sl":int32(8),"sc":int32(8),"el":int32(8),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(19)
  }
  push int32(10)
  push int32(9)
  swapn
  pop
  meta source_mark {
  "sl":int32(10),"sc":int32(8),"el":int32(10),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(18)
  }
  push int32(8)
  dupn
  push int32(1)
  swap
  lt
  push int8(3)
  cast
  push int32(8)
  swapn
  pop
  push int32(7)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br16
  meta source_mark {
  "sl":int32(10),"sc":int32(19),"el":int32(10),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(20)
  }
  push int32(4)
  meta source_mark {
  "sl":int32(11),"sc":int32(12),"el":int32(11),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(18)
  }
  push int32(9)
  swapn
  pop
  @TestIfs_br16:
  meta source_mark {
  "sl":int32(12),"sc":int32(8),"el":int32(12),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(9)
  }
  push int32(8)
  dupn
  meta source_mark {
  "sl":int32(14),"sc":int32(8),"el":int32(14),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(18)
  }
  push int32(5)
  swap
  gt
  push int8(3)
  cast
  push int32(7)
  swapn
  pop
  push int32(6)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br38
  push int32(8)
  dupn
  meta source_mark {
  "sl":int32(14),"sc":int32(19),"el":int32(14),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(20)
  }
  push int32(6)
  meta source_mark {
  "sl":int32(15),"sc":int32(11),"el":int32(15),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(21)
  }
  swap
  gt
  push int8(3)
  cast
  push int32(6)
  swapn
  pop
  push int32(5)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br37
  push int32(7)
  push int32(9)
  swapn
  pop
  meta source_mark {
  "sl":int32(15),"sc":int32(22),"el":int32(15),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(23)
  }
  @TestIfs_br37:
  meta source_mark {
  "sl":int32(16),"sc":int32(15),"el":int32(16),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(21)
  }
  @TestIfs_br38:
  push int32(8)
  dupn
  meta source_mark {
  "sl":int32(17),"sc":int32(11),"el":int32(17),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(12)
  }
  push int32(0)
  meta source_mark {
  "sl":int32(18),"sc":int32(8),"el":int32(18),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(9)
  }
  meta source_mark {
  "sl":int32(20),"sc":int32(8),"el":int32(20),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(18)
  }
  swap
  gt
  push int8(3)
  cast
  push int32(5)
  swapn
  pop
  push int32(4)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br54
  push int32(4)
  push int32(9)
  swapn
  pop
  jump @TestIfs_br58
  @TestIfs_br54:
  meta source_mark {
  "sl":int32(20),"sc":int32(19),"el":int32(20),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(20)
  }
  meta source_mark {
  "sl":int32(21),"sc":int32(11),"el":int32(21),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(17)
  }
  push int32(5)
  push int32(9)
  swapn
  pop
  meta source_mark {
  "sl":int32(22),"sc":int32(8),"el":int32(22),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(9)
  }
  @TestIfs_br58:
  push int32(8)
  dupn
  push int32(2)
  meta source_mark {
  "sl":int32(22),"sc":int32(15),"el":int32(22),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(16)
  }
  meta source_mark {
  "sl":int32(23),"sc":int32(11),"el":int32(23),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(17)
  }
  swap
  gt
  push int8(3)
  cast
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br68
  meta source_mark {
  "sl":int32(24),"sc":int32(8),"el":int32(24),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(9)
  }
  push int32(8)
  dupn
  meta source_mark {
  "sl":int32(26),"sc":int32(8),"el":int32(26),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(27)
  }
  push int32(4)
  swap
  lt
  push int8(3)
  cast
  jump @TestIfs_br69
  @TestIfs_br68:
  push int32(0)
  @TestIfs_br69:
  push int32(4)
  swapn
  pop
  push int32(3)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br81
  push int32(6)
  push int32(9)
  swapn
  pop
  jump @TestIfs_br85
  @TestIfs_br81:
  push int32(8)
  push int32(9)
  swapn
  pop
  @TestIfs_br85:
  meta source_mark {
  "sl":int32(26),"sc":int32(28),"el":int32(26),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(29)
  }
  push int32(8)
  dupn
  meta source_mark {
  "sl":int32(27),"sc":int32(11),"el":int32(27),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(17)
  }
  push int32(7)
  meta source_mark {
  "sl":int32(28),"sc":int32(8),"el":int32(28),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(9)
  }
  swap
  gt
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br96
  push int32(8)
  dupn
  meta source_mark {
  "sl":int32(28),"sc":int32(15),"el":int32(28),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(16)
  }
  push int32(10)
  meta source_mark {
  "sl":int32(29),"sc":int32(11),"el":int32(29),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(17)
  }
  swap
  gt
  push int8(3)
  cast
  jump @TestIfs_br97
  @TestIfs_br96:
  meta source_mark {
  "sl":int32(30),"sc":int32(8),"el":int32(30),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(9)
  }
  push int32(1)
  @TestIfs_br97:
  meta source_mark {
  "sl":int32(32),"sc":int32(8),"el":int32(32),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(28)
  }
  push int32(3)
  swapn
  pop
  push int32(2)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br109
  push int32(1)
  push int32(9)
  swapn
  pop
  jump @TestIfs_br113
  @TestIfs_br109:
  push int32(0)
  push int32(9)
  swapn
  pop
  @TestIfs_br113:
  push int32(8)
  dupn
  push int32(1)
  swap
  gt
  push int8(3)
  cast
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br121
  meta source_mark {
  "sl":int32(32),"sc":int32(29),"el":int32(32),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(30)
  }
  push int32(8)
  dupn
  meta source_mark {
  "sl":int32(33),"sc":int32(12),"el":int32(33),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(18)
  }
  push int32(3)
  meta source_mark {
  "sl":int32(34),"sc":int32(8),"el":int32(34),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(9)
  }
  swap
  lt
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br128
  @TestIfs_br121:
  push int32(8)
  dupn
  meta source_mark {
  "sl":int32(34),"sc":int32(15),"el":int32(34),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(16)
  }
  push int32(20)
  meta source_mark {
  "sl":int32(35),"sc":int32(12),"el":int32(35),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(18)
  }
  swap
  gt
  push int8(3)
  cast
  jump @TestIfs_br129
  @TestIfs_br128:
  meta source_mark {
  "sl":int32(36),"sc":int32(8),"el":int32(36),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(9)
  }
  push int32(1)
  @TestIfs_br129:
  meta source_mark {
  "sl":int32(38),"sc":int32(8),"el":int32(38),"src":"$PRAVDA_TMP_DIR/If.cs","ec":int32(39)
  }
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestIfs_br141
  push int32(2)
  push int32(9)
  swapn
  pop
  jump @TestIfs_br145
  @TestIfs_br141:
  push int32(3)
  push int32(9)
  swapn
  pop
  @TestIfs_br145:
  jump @TestIfs_lvc
  @TestIfs_lvc:
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  jump @stop
  @method_ctor:
  meta method {
  "name":"ctor","returnTpe":int8(0)
  }
  push "init"
  sexist
  not
  jumpi @ctor_ok
  push "Program has been already initialized"
  throw
  @ctor_ok:
  push null
  push "init"
  sput
  jump @ctor_lvc
  @ctor_lvc:
  pop
  jump @stop
  @stop:
