dotnet-compilation:
  steps:
  - target: Pravda.dll
    sources:
    - PravdaDotNet/Pravda.cs
  - target: If.exe
    sources:
    - Pravda.dll
    - dotnet-tests/resources/If.cs
---
translation: |-
  meta custom "CIL"
  dup
  push "ctor"
  eq
  jumpi @method_ctor
  push "init"
  sexist
  jumpi @methods
  push "Program was not initialized"
  throw
  @methods:
  dup
  push "ifs"
  eq
  jumpi @method_ifs
  push "Wrong method name"
  throw
  @method_ctor:
  meta method {
  "name":"ctor","returnTpe":int8(0)
  }
  push "init"
  sexist
  not
  jumpi @ctor_ok
  push "Program has been already initialized"
  throw
  @ctor_ok:
  push null
  push "init"
  sput
  jump @ctor_lvc
  @ctor_lvc:
  pop
  jump @stop
  @method_ifs:
  meta method {
  "name":"ifs","returnTpe":int8(0)
  }
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push int32(10)
  push int32(9)
  swapn
  pop
  push int32(8)
  dupn
  push int32(1)
  swap
  lt
  push int8(3)
  cast
  push int32(8)
  swapn
  pop
  push int32(7)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br16
  push int32(4)
  push int32(9)
  swapn
  pop
  @ifs_br16:
  push int32(8)
  dupn
  push int32(5)
  swap
  gt
  push int8(3)
  cast
  push int32(7)
  swapn
  pop
  push int32(6)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br38
  push int32(8)
  dupn
  push int32(6)
  swap
  gt
  push int8(3)
  cast
  push int32(6)
  swapn
  pop
  push int32(5)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br37
  push int32(7)
  push int32(9)
  swapn
  pop
  @ifs_br37:
  @ifs_br38:
  push int32(8)
  dupn
  push int32(0)
  swap
  gt
  push int8(3)
  cast
  push int32(5)
  swapn
  pop
  push int32(4)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br54
  push int32(4)
  push int32(9)
  swapn
  pop
  jump @ifs_br58
  @ifs_br54:
  push int32(5)
  push int32(9)
  swapn
  pop
  @ifs_br58:
  push int32(8)
  dupn
  push int32(2)
  swap
  gt
  push int8(3)
  cast
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br68
  push int32(8)
  dupn
  push int32(4)
  swap
  lt
  push int8(3)
  cast
  jump @ifs_br69
  @ifs_br68:
  push int32(0)
  @ifs_br69:
  push int32(4)
  swapn
  pop
  push int32(3)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br81
  push int32(6)
  push int32(9)
  swapn
  pop
  jump @ifs_br85
  @ifs_br81:
  push int32(8)
  push int32(9)
  swapn
  pop
  @ifs_br85:
  push int32(8)
  dupn
  push int32(7)
  swap
  gt
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br96
  push int32(8)
  dupn
  push int32(10)
  swap
  gt
  push int8(3)
  cast
  jump @ifs_br97
  @ifs_br96:
  push int32(1)
  @ifs_br97:
  push int32(3)
  swapn
  pop
  push int32(2)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br109
  push int32(1)
  push int32(9)
  swapn
  pop
  jump @ifs_br113
  @ifs_br109:
  push int32(0)
  push int32(9)
  swapn
  pop
  @ifs_br113:
  push int32(8)
  dupn
  push int32(1)
  swap
  gt
  push int8(3)
  cast
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br121
  push int32(8)
  dupn
  push int32(3)
  swap
  lt
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br128
  @ifs_br121:
  push int32(8)
  dupn
  push int32(20)
  swap
  gt
  push int8(3)
  cast
  jump @ifs_br129
  @ifs_br128:
  push int32(1)
  @ifs_br129:
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @ifs_br141
  push int32(2)
  push int32(9)
  swapn
  pop
  jump @ifs_br145
  @ifs_br141:
  push int32(3)
  push int32(9)
  swapn
  pop
  @ifs_br145:
  jump @ifs_lvc
  @ifs_lvc:
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  jump @stop
  @stop:
