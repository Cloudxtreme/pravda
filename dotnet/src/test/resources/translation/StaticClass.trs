dotnet-compilation:
  steps:
  - target: Pravda.dll
    sources:
    - PravdaDotNet/Pravda.cs
    optimize: false
  - target: StaticClass.exe
    sources:
    - Pravda.dll
    - dotnet-tests/resources/StaticClass.cs
    optimize: false
---
translation: |-
  meta custom "CIL"
  dup
  push "ctor"
  eq
  jumpi @method_ctor
  push "init"
  sexist
  jumpi @methods
  push "Program was not initialized"
  throw
  @methods:
  dup
  push "TestToHex"
  eq
  jumpi @method_TestToHex
  push "Wrong method name"
  throw
  @method_TestToHex:
  meta method {
  "name":"TestToHex",int32(0):int8(14),"returnTpe":int8(11)
  }
  push null
  meta source_mark {
  "sl":int32(65),"sc":int32(5),"el":int32(65),"src":"/tmp/pravda/StaticClass.cs","ec":int32(6)
  }
  meta source_mark {
  "sl":int32(66),"sc":int32(9),"el":int32(66),"src":"/tmp/pravda/StaticClass.cs","ec":int32(43)
  }
  push int32(3)
  dupn
  call @func_Expload.Pravda.StringUtils.BytesToHex_Expload.Pravda.Bytes
  push int32(1)
  swapn
  pop
  push int32(0)
  dupn
  meta source_mark {
  "sl":int32(67),"sc":int32(5),"el":int32(67),"src":"/tmp/pravda/StaticClass.cs","ec":int32(6)
  }
  jump @TestToHex_lvc
  @TestToHex_lvc:
  swap
  pop
  swap
  pop
  swap
  pop
  jump @stop
  @method_ctor:
  meta method {
  "name":"ctor","returnTpe":int8(0)
  }
  push "init"
  sexist
  not
  jumpi @ctor_ok
  push "Program has been already initialized"
  throw
  @ctor_ok:
  push null
  push "init"
  sput
  jump @ctor_lvc
  @ctor_lvc:
  pop
  jump @stop
  @func_Expload.Pravda.StringUtils.ByteToHex_uint8:
  push null
  meta source_mark {
  "sl":int32(46),"sc":int32(9),"el":int32(46),"src":"/tmp/pravda/StaticClass.cs","ec":int32(10)
  }
  meta source_mark {
  "sl":int32(47),"sc":int32(13),"el":int32(47),"src":"/tmp/pravda/StaticClass.cs","ec":int32(54)
  }
  push int32(3)
  dupn
  push int32(16)
  swap
  div
  call @func_Expload.Pravda.StringUtils.HexPart_int32
  push int32(4)
  dupn
  push int32(16)
  swap
  mod
  call @func_Expload.Pravda.StringUtils.HexPart_int32
  swap
  concat
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  meta source_mark {
  "sl":int32(48),"sc":int32(9),"el":int32(48),"src":"/tmp/pravda/StaticClass.cs","ec":int32(10)
  }
  jump @Expload.Pravda.StringUtils.ByteToHex_uint8_lvc
  @Expload.Pravda.StringUtils.ByteToHex_uint8_lvc:
  swap
  pop
  swap
  pop
  ret
  @func_Expload.Pravda.StringUtils.BytesToHex_Expload.Pravda.Bytes:
  push null
  push null
  push null
  push null
  meta source_mark {
  "sl":int32(51),"sc":int32(9),"el":int32(51),"src":"/tmp/pravda/StaticClass.cs","ec":int32(10)
  }
  meta source_mark {
  "sl":int32(52),"sc":int32(13),"el":int32(52),"src":"/tmp/pravda/StaticClass.cs","ec":int32(29)
  }
  push ""
  push int32(5)
  swapn
  pop
  meta source_mark {
  "sl":int32(53),"sc":int32(18),"el":int32(53),"src":"/tmp/pravda/StaticClass.cs","ec":int32(27)
  }
  push int32(0)
  push int32(4)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.BytesToHex_Expload.Pravda.Bytes_br36
  @Expload.Pravda.StringUtils.BytesToHex_Expload.Pravda.Bytes_br11:
  push int32(4)
  dupn
  meta source_mark {
  "sl":int32(53),"sc":int32(54),"el":int32(53),"src":"/tmp/pravda/StaticClass.cs","ec":int32(55)
  }
  push int32(7)
  dupn
  meta source_mark {
  "sl":int32(54),"sc":int32(17),"el":int32(54),"src":"/tmp/pravda/StaticClass.cs","ec":int32(44)
  }
  push int32(5)
  dupn
  array_get
  call @func_Expload.Pravda.StringUtils.ByteToHex_uint8
  swap
  concat
  push int32(5)
  swapn
  pop
  push int32(3)
  dupn
  meta source_mark {
  "sl":int32(55),"sc":int32(13),"el":int32(55),"src":"/tmp/pravda/StaticClass.cs","ec":int32(14)
  }
  push int32(1)
  meta source_mark {
  "sl":int32(53),"sc":int32(49),"el":int32(53),"src":"/tmp/pravda/StaticClass.cs","ec":int32(52)
  }
  add
  push int32(4)
  swapn
  pop
  @Expload.Pravda.StringUtils.BytesToHex_Expload.Pravda.Bytes_br36:
  push int32(3)
  dupn
  push int32(7)
  dupn
  meta source_mark {
  "sl":int32(53),"sc":int32(29),"el":int32(53),"src":"/tmp/pravda/StaticClass.cs","ec":int32(47)
  }
  length
  swap
  lt
  push int8(3)
  cast
  push int32(3)
  swapn
  pop
  push int32(2)
  dupn
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.BytesToHex_Expload.Pravda.Bytes_br11
  push int32(4)
  dupn
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  meta source_mark {
  "sl":int32(56),"sc":int32(13),"el":int32(56),"src":"/tmp/pravda/StaticClass.cs","ec":int32(24)
  }
  jump @Expload.Pravda.StringUtils.BytesToHex_Expload.Pravda.Bytes_lvc
  @Expload.Pravda.StringUtils.BytesToHex_Expload.Pravda.Bytes_lvc:
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  ret
  @func_Expload.Pravda.StringUtils.HexPart_int32:
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  meta source_mark {
  "sl":int32(9),"sc":int32(9),"el":int32(9),"src":"/tmp/pravda/StaticClass.cs","ec":int32(10)
  }
  meta source_mark {
  "sl":int32(10),"sc":int32(13),"el":int32(10),"src":"/tmp/pravda/StaticClass.cs","ec":int32(24)
  }
  push int32(19)
  dupn
  push int32(0)
  eq
  push int8(3)
  cast
  push int32(18)
  swapn
  pop
  push int32(17)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br20
  meta source_mark {
  "sl":int32(11),"sc":int32(17),"el":int32(11),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push "0"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br20:
  push int32(19)
  dupn
  push int32(1)
  eq
  push int8(3)
  cast
  push int32(16)
  swapn
  pop
  push int32(15)
  dupn
  meta source_mark {
  "sl":int32(12),"sc":int32(18),"el":int32(12),"src":"/tmp/pravda/StaticClass.cs","ec":int32(29)
  }
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br39
  push "1"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br39:
  push int32(19)
  dupn
  meta source_mark {
  "sl":int32(13),"sc":int32(17),"el":int32(13),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push int32(2)
  eq
  push int8(3)
  cast
  push int32(15)
  swapn
  pop
  push int32(14)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br58
  push "2"
  meta source_mark {
  "sl":int32(14),"sc":int32(18),"el":int32(14),"src":"/tmp/pravda/StaticClass.cs","ec":int32(29)
  }
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br58:
  push int32(19)
  dupn
  push int32(3)
  eq
  push int8(3)
  cast
  push int32(14)
  swapn
  pop
  meta source_mark {
  "sl":int32(15),"sc":int32(17),"el":int32(15),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push int32(13)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br79
  push "3"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br79:
  push int32(19)
  dupn
  push int32(4)
  meta source_mark {
  "sl":int32(16),"sc":int32(18),"el":int32(16),"src":"/tmp/pravda/StaticClass.cs","ec":int32(29)
  }
  eq
  push int8(3)
  cast
  push int32(13)
  swapn
  pop
  push int32(12)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br100
  meta source_mark {
  "sl":int32(17),"sc":int32(17),"el":int32(17),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push "4"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br100:
  push int32(19)
  dupn
  push int32(5)
  eq
  push int8(3)
  cast
  push int32(12)
  swapn
  pop
  push int32(11)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br121
  meta source_mark {
  "sl":int32(18),"sc":int32(18),"el":int32(18),"src":"/tmp/pravda/StaticClass.cs","ec":int32(29)
  }
  push "5"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br121:
  push int32(19)
  dupn
  push int32(6)
  eq
  push int8(3)
  cast
  meta source_mark {
  "sl":int32(19),"sc":int32(17),"el":int32(19),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push int32(11)
  swapn
  pop
  push int32(10)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br142
  push "6"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br142:
  meta source_mark {
  "sl":int32(20),"sc":int32(18),"el":int32(20),"src":"/tmp/pravda/StaticClass.cs","ec":int32(29)
  }
  push int32(19)
  dupn
  push int32(7)
  eq
  push int8(3)
  cast
  push int32(10)
  swapn
  pop
  push int32(9)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br163
  meta source_mark {
  "sl":int32(21),"sc":int32(17),"el":int32(21),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push "7"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br163:
  push int32(19)
  dupn
  push int32(8)
  eq
  push int8(3)
  cast
  push int32(9)
  swapn
  pop
  meta source_mark {
  "sl":int32(22),"sc":int32(18),"el":int32(22),"src":"/tmp/pravda/StaticClass.cs","ec":int32(29)
  }
  push int32(8)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br184
  push "8"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br184:
  push int32(19)
  dupn
  meta source_mark {
  "sl":int32(23),"sc":int32(17),"el":int32(23),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push int32(9)
  eq
  push int8(3)
  cast
  push int32(8)
  swapn
  pop
  push int32(7)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br203
  meta source_mark {
  "sl":int32(24),"sc":int32(18),"el":int32(24),"src":"/tmp/pravda/StaticClass.cs","ec":int32(29)
  }
  push "9"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br203:
  push int32(19)
  dupn
  push int32(10)
  eq
  push int8(3)
  cast
  meta source_mark {
  "sl":int32(25),"sc":int32(17),"el":int32(25),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push int32(7)
  swapn
  pop
  push int32(6)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br222
  push "A"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br222:
  push int32(19)
  dupn
  meta source_mark {
  "sl":int32(26),"sc":int32(18),"el":int32(26),"src":"/tmp/pravda/StaticClass.cs","ec":int32(29)
  }
  push int32(11)
  eq
  push int8(3)
  cast
  push int32(6)
  swapn
  pop
  push int32(5)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br241
  meta source_mark {
  "sl":int32(27),"sc":int32(17),"el":int32(27),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push "B"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br241:
  push int32(19)
  dupn
  push int32(12)
  eq
  push int8(3)
  cast
  meta source_mark {
  "sl":int32(28),"sc":int32(18),"el":int32(28),"src":"/tmp/pravda/StaticClass.cs","ec":int32(29)
  }
  push int32(5)
  swapn
  pop
  push int32(4)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br260
  push "C"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br260:
  push int32(19)
  dupn
  meta source_mark {
  "sl":int32(29),"sc":int32(17),"el":int32(29),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push int32(13)
  eq
  push int8(3)
  cast
  push int32(4)
  swapn
  pop
  push int32(3)
  dupn
  meta source_mark {
  "sl":int32(30),"sc":int32(18),"el":int32(30),"src":"/tmp/pravda/StaticClass.cs","ec":int32(30)
  }
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br279
  push "D"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br279:
  push int32(19)
  dupn
  push int32(14)
  meta source_mark {
  "sl":int32(31),"sc":int32(17),"el":int32(31),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  eq
  push int8(3)
  cast
  push int32(3)
  swapn
  pop
  push int32(2)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br298
  meta source_mark {
  "sl":int32(32),"sc":int32(18),"el":int32(32),"src":"/tmp/pravda/StaticClass.cs","ec":int32(30)
  }
  push "E"
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br298:
  push int32(19)
  dupn
  push int32(15)
  eq
  push int8(3)
  cast
  push int32(2)
  swapn
  pop
  meta source_mark {
  "sl":int32(33),"sc":int32(17),"el":int32(33),"src":"/tmp/pravda/StaticClass.cs","ec":int32(28)
  }
  push int32(1)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @Expload.Pravda.StringUtils.HexPart_int32_br317
  push "F"
  meta source_mark {
  "sl":int32(34),"sc":int32(18),"el":int32(34),"src":"/tmp/pravda/StaticClass.cs","ec":int32(30)
  }
  push int32(17)
  swapn
  pop
  jump @Expload.Pravda.StringUtils.HexPart_int32_br325
  @Expload.Pravda.StringUtils.HexPart_int32_br317:
  push ""
  push int32(17)
  swapn
  pop
  @Expload.Pravda.StringUtils.HexPart_int32_br325:
  push int32(16)
  dupn
  jump @Expload.Pravda.StringUtils.HexPart_int32_lvc
  @Expload.Pravda.StringUtils.HexPart_int32_lvc:
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  ret
  @stop:
