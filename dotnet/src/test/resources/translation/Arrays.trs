dotnet-compilation:
  steps:
  - target: Pravda.dll
    sources:
    - PravdaDotNet/Pravda.cs
    optimize: false
  - target: Arrays.exe
    sources:
    - Pravda.dll
    - dotnet-tests/resources/Arrays.cs
    optimize: false
---
translation: |-
  meta custom "CIL"
  meta program_name "Arrays"
  dup
  push "ctor"
  eq
  jumpi @method_ctor
  push "init"
  sexist
  jumpi @methods
  push "Program was not initialized"
  throw
  @methods:
  dup
  push "TestAllArrays"
  eq
  jumpi @method_TestAllArrays
  dup
  push "TestByteArrays"
  eq
  jumpi @method_TestByteArrays
  push "Wrong method name"
  throw
  @method_TestAllArrays:
  meta method {
  "name":"TestAllArrays","returnTpe":int8(0)
  }
  push null
  push null
  push null
  push null
  push null
  push null
  meta source_mark {
  "sl":int32(32),"sc":int32(33),"el":int32(32),"src":"/tmp/pravda/Arrays.cs","ec":int32(34)
  }
  meta source_mark {
  "sl":int32(33),"sc":int32(9),"el":int32(33),"src":"/tmp/pravda/Arrays.cs","ec":int32(53)
  }
  new int16[97, 98, 99]
  push int32(7)
  swapn
  pop
  meta source_mark {
  "sl":int32(34),"sc":int32(9),"el":int32(34),"src":"/tmp/pravda/Arrays.cs","ec":int32(44)
  }
  new int32[1, 2, 3]
  push int32(6)
  swapn
  pop
  meta source_mark {
  "sl":int32(35),"sc":int32(9),"el":int32(35),"src":"/tmp/pravda/Arrays.cs","ec":int32(59)
  }
  new number[1.0, 2.0, 3.0]
  push int32(5)
  swapn
  pop
  meta source_mark {
  "sl":int32(36),"sc":int32(9),"el":int32(36),"src":"/tmp/pravda/Arrays.cs","ec":int32(65)
  }
  push int32(3)
  push int8(11)
  new_array
  dup
  push int32(0)
  push "abc"
  swap
  array_mut
  dup
  push int32(1)
  push "def"
  swap
  array_mut
  dup
  push int32(2)
  push "rty"
  swap
  array_mut
  push int32(4)
  swapn
  pop
  meta source_mark {
  "sl":int32(37),"sc":int32(9),"el":int32(37),"src":"/tmp/pravda/Arrays.cs","ec":int32(47)
  }
  new int32[4, 5, 6]
  push int32(3)
  swapn
  pop
  meta source_mark {
  "sl":int32(39),"sc":int32(9),"el":int32(39),"src":"/tmp/pravda/Arrays.cs","ec":int32(24)
  }
  push int32(6)
  dupn
  push int32(1)
  push int32(100)
  swap
  array_mut
  meta source_mark {
  "sl":int32(40),"sc":int32(9),"el":int32(40),"src":"/tmp/pravda/Arrays.cs","ec":int32(21)
  }
  push int32(5)
  dupn
  push int32(1)
  push int32(4)
  swap
  array_mut
  meta source_mark {
  "sl":int32(41),"sc":int32(9),"el":int32(41),"src":"/tmp/pravda/Arrays.cs","ec":int32(26)
  }
  push int32(4)
  dupn
  push int32(1)
  push number(4.0)
  swap
  array_mut
  meta source_mark {
  "sl":int32(42),"sc":int32(9),"el":int32(42),"src":"/tmp/pravda/Arrays.cs","ec":int32(29)
  }
  push int32(3)
  dupn
  push int32(1)
  push "asdf"
  swap
  array_mut
  meta source_mark {
  "sl":int32(43),"sc":int32(9),"el":int32(43),"src":"/tmp/pravda/Arrays.cs","ec":int32(22)
  }
  push int32(2)
  dupn
  push int32(1)
  push int32(7)
  swap
  array_mut
  meta source_mark {
  "sl":int32(45),"sc":int32(9),"el":int32(45),"src":"/tmp/pravda/Arrays.cs","ec":int32(34)
  }
  push int32(3)
  dupn
  length
  push int8(3)
  cast
  push int32(2)
  swapn
  pop
  meta source_mark {
  "sl":int32(46),"sc":int32(5),"el":int32(46),"src":"/tmp/pravda/Arrays.cs","ec":int32(6)
  }
  jump @TestAllArrays_lvc
  @TestAllArrays_lvc:
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  jump @stop
  @method_TestByteArrays:
  meta method {
  "name":"TestByteArrays","returnTpe":int8(0)
  }
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  meta source_mark {
  "sl":int32(9),"sc":int32(34),"el":int32(9),"src":"/tmp/pravda/Arrays.cs","ec":int32(35)
  }
  meta source_mark {
  "sl":int32(10),"sc":int32(9),"el":int32(10),"src":"/tmp/pravda/Arrays.cs","ec":int32(44)
  }
  new int8[1, 2, 3]
  push int32(11)
  swapn
  pop
  meta source_mark {
  "sl":int32(11),"sc":int32(9),"el":int32(11),"src":"/tmp/pravda/Arrays.cs","ec":int32(43)
  }
  new int8[4, 5, 6]
  call @stdlib_array_to_bytes
  push int32(10)
  swapn
  pop
  meta source_mark {
  "sl":int32(12),"sc":int32(9),"el":int32(12),"src":"/tmp/pravda/Arrays.cs","ec":int32(43)
  }
  new int8[7, 8, 9]
  call @stdlib_array_to_bytes
  push int32(9)
  swapn
  pop
  meta source_mark {
  "sl":int32(14),"sc":int32(9),"el":int32(14),"src":"/tmp/pravda/Arrays.cs","ec":int32(27)
  }
  push int32(10)
  dupn
  push int32(0)
  array_get
  push int32(8)
  swapn
  pop
  meta source_mark {
  "sl":int32(15),"sc":int32(9),"el":int32(15),"src":"/tmp/pravda/Arrays.cs","ec":int32(27)
  }
  push int32(10)
  dupn
  push int32(2)
  array_get
  push int32(7)
  swapn
  pop
  meta source_mark {
  "sl":int32(16),"sc":int32(9),"el":int32(16),"src":"/tmp/pravda/Arrays.cs","ec":int32(29)
  }
  push int32(9)
  dupn
  push int32(1)
  array_get
  push int32(6)
  swapn
  pop
  meta source_mark {
  "sl":int32(17),"sc":int32(9),"el":int32(17),"src":"/tmp/pravda/Arrays.cs","ec":int32(29)
  }
  push int32(8)
  dupn
  push int32(1)
  array_get
  push int32(5)
  swapn
  pop
  meta source_mark {
  "sl":int32(19),"sc":int32(9),"el":int32(19),"src":"/tmp/pravda/Arrays.cs","ec":int32(43)
  }
  push int32(9)
  dupn
  push int32(1)
  push int32(2)
  push int32(2)
  dupn
  add
  swap
  slice
  push int32(4)
  swapn
  pop
  meta source_mark {
  "sl":int32(21),"sc":int32(9),"el":int32(21),"src":"/tmp/pravda/Arrays.cs","ec":int32(42)
  }
  push x42797465734D617070696E67
  push int32(10)
  dupn
  push int32(10)
  dupn
  push int32(2)
  dupn
  push int8(14)
  cast
  push int32(4)
  dupn
  concat
  sput
  pop
  pop
  meta source_mark {
  "sl":int32(22),"sc":int32(9),"el":int32(22),"src":"/tmp/pravda/Arrays.cs","ec":int32(54)
  }
  push x42797465734D617070696E67
  new int8[8, 9, 10]
  call @stdlib_array_to_bytes
  push int8(14)
  cast
  swap
  concat
  sexist
  push int8(3)
  cast
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @TestByteArrays_br192
  meta source_mark {
  "sl":int32(22),"sc":int32(55),"el":int32(22),"src":"/tmp/pravda/Arrays.cs","ec":int32(56)
  }
  meta source_mark {
  "sl":int32(23),"sc":int32(11),"el":int32(23),"src":"/tmp/pravda/Arrays.cs","ec":int32(56)
  }
  push x42797465734D617070696E67
  push int32(10)
  dupn
  new int8[7, 8, 9]
  call @stdlib_array_to_bytes
  push int32(2)
  dupn
  push int8(14)
  cast
  push int32(4)
  dupn
  concat
  sput
  pop
  pop
  @TestByteArrays_br192:
  meta source_mark {
  "sl":int32(24),"sc":int32(9),"el":int32(24),"src":"/tmp/pravda/Arrays.cs","ec":int32(10)
  }
  push int32(10)
  dupn
  meta source_mark {
  "sl":int32(26),"sc":int32(9),"el":int32(26),"src":"/tmp/pravda/Arrays.cs","ec":int32(21)
  }
  push int32(0)
  push int32(2)
  swap
  array_mut
  push int32(10)
  dupn
  meta source_mark {
  "sl":int32(27),"sc":int32(9),"el":int32(27),"src":"/tmp/pravda/Arrays.cs","ec":int32(21)
  }
  push int32(1)
  push int32(1)
  swap
  array_mut
  push int32(9)
  dupn
  meta source_mark {
  "sl":int32(29),"sc":int32(9),"el":int32(29),"src":"/tmp/pravda/Arrays.cs","ec":int32(35)
  }
  length
  push int32(3)
  swapn
  pop
  jump @TestByteArrays_lvc
  @TestByteArrays_lvc:
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  jump @stop
  @method_ctor:
  meta method {
  "name":"ctor","returnTpe":int8(0)
  }
  push "init"
  sexist
  not
  jumpi @ctor_ok
  push "Program has been already initialized"
  throw
  @ctor_ok:
  push null
  push "init"
  sput
  meta source_mark {
  "sl":int32(7),"sc":int32(5),"el":int32(7),"src":"/tmp/pravda/Arrays.cs","ec":int32(77)
  }
  jump @ctor_lvc
  @ctor_lvc:
  pop
  jump @stop
  @stdlib_array_to_bytes:
  dup
  length
  push x
  push int32(0)
  @array_to_bytes_loop:
  push int32(4)
  dupn
  push int32(2)
  dupn
  array_get
  push int8(14)
  cast
  push int32(3)
  dupn
  concat
  push int32(3)
  swapn
  pop
  push int32(1)
  add
  dup
  push int32(4)
  dupn
  gt
  jumpi @array_to_bytes_loop
  pop
  swap
  pop
  swap
  pop
  ret
  @stop:
