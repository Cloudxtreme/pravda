dotnet-compilation:
  steps:
    - target: Pravda.dll
      sources: [PravdaDotNet/Pravda.cs]
    - target: arrays.exe
      sources:
        - Pravda.dll
        - dotnet-tests/resources/arrays.cs
---
translation: |-
  meta custom "CIL"
  dup
  push "ctor"
  eq
  jumpi @method_ctor
  push "init"
  sexist
  jumpi @methods
  push "Program was not initialized"
  throw
  @methods:
  dup
  push "WorkWithArrays"
  eq
  jumpi @method_WorkWithArrays
  dup
  push "WorkWithBytes"
  eq
  jumpi @method_WorkWithBytes
  push "Wrong method name"
  throw
  @method_WorkWithArrays:
  meta method {
  "name":"WorkWithArrays","returnTpe":int8(0)
  }
  push null
  push null
  push null
  push null
  push null
  push null
  new int16[97, 98, 99]
  push int32(7)
  swapn
  pop
  new int32[1, 2, 3]
  push int32(6)
  swapn
  pop
  new number[1.0, 2.0, 3.0]
  push int32(5)
  swapn
  pop
  push int32(3)
  push int8(11)
  new_array
  dup
  push int32(0)
  push "abc"
  swap
  array_mut
  dup
  push int32(1)
  push "def"
  swap
  array_mut
  dup
  push int32(2)
  push "rty"
  swap
  array_mut
  push int32(4)
  swapn
  pop
  new int32[4, 5, 6]
  push int32(3)
  swapn
  pop
  push int32(6)
  dupn
  push int32(1)
  push int32(100)
  swap
  array_mut
  push int32(5)
  dupn
  push int32(1)
  push int32(4)
  swap
  array_mut
  push int32(4)
  dupn
  push int32(1)
  push number(4.0)
  swap
  array_mut
  push int32(3)
  dupn
  push int32(1)
  push "asdf"
  swap
  array_mut
  push int32(2)
  dupn
  push int32(1)
  push int32(7)
  swap
  array_mut
  push int32(3)
  dupn
  length
  push int8(3)
  cast
  push int32(2)
  swapn
  pop
  jump @WorkWithArrays_lvc
  @WorkWithArrays_lvc:
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  jump @stop
  @method_WorkWithBytes:
  meta method {
  "name":"WorkWithBytes","returnTpe":int8(0)
  }
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  push null
  new int8[1, 2, 3]
  push int32(11)
  swapn
  pop
  new int8[4, 5, 6]
  call @stdlib_array_to_bytes
  push int32(10)
  swapn
  pop
  new int8[7, 8, 9]
  call @stdlib_array_to_bytes
  push int32(9)
  swapn
  pop
  push int32(10)
  dupn
  push int32(0)
  array_get
  push int32(8)
  swapn
  pop
  push int32(10)
  dupn
  push int32(2)
  array_get
  push int32(7)
  swapn
  pop
  push int32(9)
  dupn
  push int32(1)
  array_get
  push int32(6)
  swapn
  pop
  push int32(8)
  dupn
  push int32(1)
  array_get
  push int32(5)
  swapn
  pop
  push int32(9)
  dupn
  push int32(1)
  push int32(2)
  push int32(2)
  dupn
  add
  swap
  slice
  push int32(4)
  swapn
  pop
  push x6279746573
  push int32(10)
  dupn
  push int32(10)
  dupn
  push int32(2)
  dupn
  push int8(14)
  cast
  push int32(4)
  dupn
  concat
  sput
  pop
  pop
  push x6279746573
  new int8[8, 9, 10]
  call @stdlib_array_to_bytes
  push int8(14)
  cast
  swap
  concat
  sexist
  push int8(3)
  cast
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  push int8(9)
  cast
  not
  push int8(3)
  cast
  push int32(1)
  eq
  jumpi @WorkWithBytes_br192
  push x6279746573
  push int32(10)
  dupn
  new int8[7, 8, 9]
  call @stdlib_array_to_bytes
  push int32(2)
  dupn
  push int8(14)
  cast
  push int32(4)
  dupn
  concat
  sput
  pop
  pop
  @WorkWithBytes_br192:
  push int32(10)
  dupn
  push int32(0)
  push int32(2)
  swap
  array_mut
  push int32(10)
  dupn
  push int32(1)
  push int32(1)
  swap
  array_mut
  push int32(9)
  dupn
  length
  push int32(3)
  swapn
  pop
  jump @WorkWithBytes_lvc
  @WorkWithBytes_lvc:
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  pop
  jump @stop
  @method_ctor:
  meta method {
  "name":"ctor","returnTpe":int8(0)
  }
  push "init"
  sexist
  not
  jumpi @ctor_ok
  push "Program has been already initialized"
  throw
  @ctor_ok:
  push null
  push "init"
  sput
  jump @ctor_lvc
  @ctor_lvc:
  pop
  jump @stop
  @stdlib_array_to_bytes:
  dup
  length
  push x
  push int32(0)
  @array_to_bytes_loop:
  push int32(4)
  dupn
  push int32(2)
  dupn
  array_get
  push int8(14)
  cast
  push int32(3)
  dupn
  concat
  push int32(3)
  swapn
  pop
  push int32(1)
  add
  dup
  push int32(4)
  dupn
  gt
  jumpi @array_to_bytes_loop
  pop
  swap
  pop
  swap
  pop
  ret
  @stop:
