exe: |-
  pcall.exe pcall_program.dll
  Expload.Pravda.Programs.MyProgram
---
translation: |-
  meta custom "CIL"
  dup
  push "ctor"
  eq
  jumpi @method_ctor
  push "init"
  sexist
  jumpi @methods
  push "Program was not initialized"
  throw
  @methods:
  dup
  push "pcall"
  eq
  jumpi @method_pcall
  push "Wrong method name"
  throw
  @method_ctor:
  meta method {
  "name":"ctor","returnTpe":int8(0)
  }
  push "init"
  sexist
  not
  jumpi @ctor_ok
  push "Program has been already initialized"
  throw
  @ctor_ok:
  push null
  push "init"
  sput
  jump @ctor_lvc
  @ctor_lvc:
  pop
  jump @stop
  @method_pcall:
  meta method {
  "name":"pcall","returnTpe":int8(3)
  }
  push null
  push null
  push null
  push null
  push null
  push "1eaed20b7ce2b336043e4b340b031f95bb1ce6d935ef733ae4df1b66e1e3d91f"
  push int32(4)
  scall
  push int32(6)
  swapn
  pop
  push int32(5)
  dupn
  push int32(1)
  push int32(2)
  push int32(2)
  swapn
  push int32(3)
  swapn
  push "Add"
  swap
  push int32(3)
  pcall
  push int32(5)
  swapn
  pop
  new int8[30, -82, -46, 11, 124, -30, -77, 54, 4, 62, 75, 52, 11, 3, 31, -107, -69, 28, -26, -39, 53, -17, 115, 58, -28, -33, 27, 102, -31, -29, -39, 31]
  call @stdlib_array_to_bytes
  push int32(4)
  swapn
  pop
  push int32(3)
  dupn
  push int32(3)
  push int32(4)
  push int32(2)
  swapn
  push int32(3)
  swapn
  push "Add"
  swap
  push int32(3)
  pcall
  push int32(3)
  swapn
  pop
  push int32(4)
  dupn
  push int32(3)
  dupn
  add
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  jump @pcall_lvc
  @pcall_lvc:
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  jump @stop
  @stdlib_array_to_bytes:
  dup
  length
  push x
  push int32(0)
  @array_to_bytes_loop:
  push int32(4)
  dupn
  push int32(2)
  dupn
  array_get
  push int8(14)
  cast
  push int32(3)
  dupn
  concat
  push int32(3)
  swapn
  pop
  push int32(1)
  add
  dup
  push int32(4)
  dupn
  gt
  jumpi @array_to_bytes_loop
  pop
  swap
  pop
  swap
  pop
  ret
  @stop:
