dotnet-compilation:
  steps:
  - target: Pravda.dll
    sources:
    - PravdaDotNet/Pravda.cs
  - target: Inheritance.exe
    sources:
    - Pravda.dll
    - dotnet-tests/resources/Inheritance.cs
---
translation: |-
  meta custom "CIL"
  dup
  push "ctor"
  eq
  jumpi @method_ctor
  push "init"
  sexist
  jumpi @methods
  push "Program was not initialized"
  throw
  @methods:
  dup
  push "Func"
  eq
  jumpi @method_Func
  push "Wrong method name"
  throw
  @method_Func:
  meta method {
  "name":"Func","returnTpe":int8(3)
  }
  push null
  push null
  push null
  push null
  push null
  push null
  push int32(100)
  new {}
  call @vtable_A
  push int32(2)
  swapn
  call @func_A.ctor_int32
  push int32(7)
  swapn
  pop
  push int32(200)
  new {}
  call @vtable_B
  push int32(2)
  swapn
  call @func_B.ctor_int32
  push int32(6)
  swapn
  pop
  push int32(6)
  dupn
  push int32(1)
  dupn
  struct_get "Answer"
  call
  swap
  pop
  push int32(6)
  dupn
  push int32(1)
  dupn
  struct_get "Answer"
  call
  swap
  pop
  add
  push int32(5)
  swapn
  pop
  push int32(6)
  dupn
  push int32(1)
  dupn
  struct_get "AnswerPlus1"
  call
  swap
  pop
  push int32(4)
  swapn
  pop
  push int32(5)
  dupn
  push int32(1)
  dupn
  struct_get "AnswerPlus1"
  call
  swap
  pop
  push int32(3)
  swapn
  pop
  push int32(3)
  dupn
  push int32(3)
  dupn
  add
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  jump @Func_lvc
  @Func_lvc:
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  swap
  pop
  jump @stop
  @method_ctor:
  meta method {
  "name":"ctor","returnTpe":int8(0)
  }
  push "init"
  sexist
  not
  jumpi @ctor_ok
  push "Program has been already initialized"
  throw
  @ctor_ok:
  push null
  push "init"
  sput
  jump @ctor_lvc
  @ctor_lvc:
  pop
  jump @stop
  @func_A.Answer:
  push null
  push int32(2)
  dupn
  struct_get "AVal"
  push int32(42)
  add
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  jump @A.Answer_lvc
  @A.Answer_lvc:
  swap
  pop
  ret
  @func_A.ctor_int32:
  push int32(2)
  dupn
  push int32(2)
  dupn
  call @func_Parent.ctor_int32
  pop
  push int32(2)
  dupn
  push int32(2)
  dupn
  struct_mut "AVal"
  jump @A.ctor_int32_lvc
  @A.ctor_int32_lvc:
  pop
  ret
  @func_B.Answer:
  push null
  push int32(2)
  dupn
  struct_get "BVal"
  push int32(43)
  add
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  jump @B.Answer_lvc
  @B.Answer_lvc:
  swap
  pop
  ret
  @func_B.ctor_int32:
  push int32(2)
  dupn
  push int32(2)
  dupn
  call @func_Parent.ctor_int32
  pop
  push int32(2)
  dupn
  push int32(2)
  dupn
  struct_mut "BVal"
  jump @B.ctor_int32_lvc
  @B.ctor_int32_lvc:
  pop
  ret
  @func_Parent.Answer:
  push null
  push int32(0)
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  jump @Parent.Answer_lvc
  @Parent.Answer_lvc:
  swap
  pop
  ret
  @func_Parent.AnswerPlus1:
  push null
  push int32(2)
  dupn
  push int32(1)
  dupn
  struct_get "Answer"
  call
  swap
  pop
  push int32(1)
  add
  push int32(2)
  swapn
  pop
  push int32(1)
  dupn
  jump @Parent.AnswerPlus1_lvc
  @Parent.AnswerPlus1_lvc:
  swap
  pop
  ret
  @func_Parent.ctor_int32:
  push int32(2)
  dupn
  pop
  jump @Parent.ctor_int32_lvc
  @Parent.ctor_int32_lvc:
  pop
  ret
  @vtable_A:
  dup
  push @func_A.Answer
  struct_mut "Answer"
  dup
  push @func_Parent.AnswerPlus1
  struct_mut "AnswerPlus1"
  ret
  @vtable_B:
  dup
  push @func_B.Answer
  struct_mut "Answer"
  dup
  push @func_Parent.AnswerPlus1
  struct_mut "AnswerPlus1"
  ret
  @stop:
